function _d38a339bb1a2abe31d0733c89cd15d220082c54c(){};Ext.namespace("Ext.ux.touch");Ext.define("Ext.ux.touch.Rating",{extend:"Ext.field.Field",xtype:"rating",config:{baseCls:Ext.baseCSSPrefix+"field x-rating-field",minValue:-1,defaultValue:-1,value:-1,clearCls:"x-rating-clear",clearIcon:false,itemsCount:5,itemCls:"x-rating-star",itemHoverCls:"x-rating-item-hover",tooltips:"",disabled:false,component:{xtype:"component",tpl:['<tpl for="items">','<div index="{[xindex - 1]}" class="{parent.itemCls} x-rating-item">',"</div>","</tpl>",'<tpl if="clearIcon">','<div class="{clearCls}">',"</div>","</tpl>"].join(""),cls:"x-rating-inner"}},initialize:function(){var a=this;Ext.ux.touch.Rating.superclass.initialize.apply(a,arguments);a.element.on({scope:a,touchstart:a.onTouchStart,touchmove:a.onTouchMove,preventDefault:true})},updateComponent:function(d,e){this.callParent(arguments);if(e){}var c=this.innerElement,a=this.getCls();this.getComponent();var b=Ext.applyIf({items:new Array(this.getItemsCount()||0)},this.config);d._tpl.overwrite(d.element.dom,b);this.items=d.element.select(".x-rating-item",d.element.dom);if(this.config.clearIcon){this.clearBtn=d.element.down("."+this.getClearCls());this.clearBtn.on("tap",this.onClear,this)}},onTouchStart:function(a){if(this.clearBtn&&a.target==this.clearBtn.dom){this.onClear();return}this.onTouchMove(a)},onTouchMove:function(d){if(this.getDisabled()){return}var f=this.innerElement.getXY();var a=d.touches[0].pageX-f[0];if(!Ext.isDefined(this.diameter)){if(this.items.getCount()){var c=this.items.first().getSize();this.diameter=Math.min(c.height,c.width)}else{this.diameter=0}}var b=Math.floor(a/this.diameter);if(b>-1){this.setValue(b)}},applyValue:function(a){a=parseFloat(a);if(isNaN(a)||a===null){a=this.getDefaultValue()}a=Math.round(a*10)/10;this._value=a},displayValue:function(g){if(!this.rendered){this.on("painted",Ext.Function.bind(this.displayValue,this,[g]),this,{single:true});return}var b=this.items;var e=b.getCount();var f=this.getItemCls();var a=this.getItemHoverCls();for(var c=0;c<e;c++){var d=b.item(c);d[c<=g?"addCls":"removeCls"](a);d[c<=g?"removeCls":"addCls"](f)}},setValue:function(d){var a=this._value;d=parseFloat(d);if(isNaN(d)||d===null){throw"Argument exception: value argument is not a number."}var c=this.getMinValue();if(Ext.isNumber(c)&&d<c){d=c}var b=this.items?this.items.getCount():this.itemsCount;if(this.items&&d>this.items.getCount()){d=this.items.getCount()-1}this.callParent([d]);this.displayValue(d);this.fireEvent("change",this,d,a)},reset:function(){this.setValue(this.getDefaultValue())},onClear:function(){if(!this.getDisabled()){this.setValue(this.getDefaultValue())}}},function(){Ext.deprecateProperty(this,"showClear","clearIcon","Ext.ux.touch.Rating.showClear has been removed, use showClear instead");Ext.deprecateProperty(this,"singleColorPerValue",null,"Ext.ux.touch.Rating.singleColorPerValue has been removed");Ext.deprecateProperty(this,"useClearIcon",null,"Ext.ux.touch.Rating.useClearIcon has been removed")});